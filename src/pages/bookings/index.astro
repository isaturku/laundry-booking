---
import Layout from "../../layouts/Layout.astro";
import db from "../../db";
import { booking } from "../../db/schema";
const session = await Astro.locals.auth.validate();
if (!session) return Astro.redirect("/login", 302);
const yesterday = new Date();
yesterday.setDate(yesterday.getDate()-1);
const bookings = await db.query.booking.findMany({
  where: (booking, { eq,and,gte }) => and(eq(booking.userId, session?.user.userId),gte(booking.startTime,yesterday.getTime())),
  with: {
    laundryMachine: true,
  },
  orderBy: (booking,{asc})=>[asc(booking.startTime)]
});
---

<Layout title="My Bookings">
  <h1 class="text-center text-white text-3xl lg:text-7xl">My Bookings</h1>
</Layout>
<div class="w-fit mx-auto overflow-x-auto">
  <table class="table">
    <thead>
      <tr>
        <th>Machine</th>
        <th>Start Time</th>
        <th>End Time</th>
        <th>Delete</th>
      </tr>
    </thead>
    <tbody>
      {
        bookings.map((booking) => (
          <>
            <tr>
              <td>{booking.laundryMachine?.description}</td>
              <td>
                {new Intl.DateTimeFormat("en-GB", {
                  dateStyle: "medium",
                  timeStyle: "short",
                }).format(new Date(booking.startTime))}
              </td>
              <td>
                {new Intl.DateTimeFormat("en-GB", {
                  dateStyle: "medium",
                  timeStyle: "short",
                }).format(new Date(booking.endTime))}
              </td>
              <td>
                <delete-button bookingId={booking.id}>
                  <button class="btn btn-circle btn-error">
                    <span class="font-icon text-xl">delete</span>
                  </button>
                </delete-button>
              </td>
            </tr>
          </>
        ))
      }
    </tbody>
  </table>
</div>
<script>
  class DeleteButton extends HTMLElement {
    constructor() {
      super();
      const id = this.getAttribute("bookingId");

      const btn = this.querySelector("button");
      btn?.addEventListener("click", async () => {
        const { status } = await fetch(`/bookings/${id}`, {
          method: "DELETE",
        });
        if (status === 200) {
          window.location.reload();
        }
      });
    }
  }
  customElements.define("delete-button", DeleteButton);
</script>
